#include <iostream>
#include <chrono>
#include <thread>
#include <vector>

using namespace std::this_thread;
using namespace std::chrono_literals;
using std::chrono::system_clock;

int main()
{

    std::string preface = "Loading Special Holiday Message...";
    for (int i = 0; i < preface.size(); i++) {
        std::cout << preface.at(i);
        sleep_for(0.03s);
    }

    sleep_for(3s);
    std::cout << std::endl;
    std::string bigSnowman = R"(                                    .                       
                                   .                        
                                  :                         
                                 .                          
                 .              ..                       .  
                  :             :    :                  .   
                  :           .:-.  .-                 :    
                  -         -:.=.   .-             .  ..    
                 :.       :.  .+    .=            .  .-     
                 -      .:    =.     -:         =    -      
                .=    .:     -:      :=   .   .:    -.      
                .=   -.     =-       :=  ..  .:   :=        
                 -..:    .-+.       .+.  -   :..--.         
                 -+:   .==.        .+-  .- .:=-.            
                 =+-  -=.        .=+.   .==:.-.             
                 :==..+.        :++  .=+=.   =.             
                 .#++:=:      .+*: -+-  .:  .=              
                 .#++*=+=.    =+++-.    .= -=               
                  ##=#*=+*-  =*=-    :-==+=.                
                  .##+%#++#-=*+--++=-:.==                   
                   .#*#%#=****=*+:   :#-                    
                    -**#%**+#==:=**+=:                      
                    :**+@#*+#=+%*+*.                        
                    =*++@*+++=**.=+                         
                    -:*%#-====+. ==                         
                      ........:::::.               :::::::::::::::::::::::::::         
                   ..........::::::::            ::                          :::
                 .=-:......:::----:--          ::                             ::
      +          ......[0]...[0]--:---         ::    Merry Christmas, Emily!! ::
      =+  .#    ............:...:::---.        ::                             ::
      .# :#    ........::\::::/::::::::-.      ::                            ::
       ++*    ........::::\::/:::::::::::.     ::  ::::::::::::::::::::::::::            
       =#      ...##..:::::\/:::..##::::.    ::::::                
      -*       .:....##::::-..::##:::::                     
     ++         ........########:::::                      
    +@*##=-.      ... ...=....:......                       
   ++                  ..  ........                         
  *-               ...........::.                           
 #-              :==++++++++***-                            
 *-           .:::---========+++++-                         
  *=        ......::---=========++++=                       
   ++      .......:::----=============.                     
    =+    .........::::-----------=====:                    
     =+  ...........::::::------------==-                   
      :-.............::::::::::---------==%-                
       .  .............:::::::::::-------: :@-              
        ..................::::::::::::---:    **            
        ...................::::::::::::---      #*.         
         ....................::::::::::--:        +*        
         .....................:::::::::::         +-        
         .......................:::::::::        .#         
          .......................:::::::         -*         
           .......................:::::        +##-         
            ......................:.:.      =%-  *.         
              .....  .. .........:::       :    .*          
                ... ...........:-=+==:.         *+          
                   .:::::-=++**++++++++++=:     @@-         
                  .=+++======================- .% +*        
                .--=============================-  .#       
               ::-------------------=============-.         
             ..::::--------------------============-        
            ...:::::---------------------------=====-       
           .....:::::::-------------------------------      
           ......::::::::::--------::------------------     
           ........:::::::::::::::::::::::::-----------:    
          ...........::::::::::::::::::::::::::---------    
          .......................::::::::::::::::-------:   
          ..........................::::::::::::::::----:   
           ..........................::::::::::::::-----:   
           ..........................:::::::::::::::----:   
          ............................:::::::::::::-----:   
          .............................:::::::::::::----.   
          ...............................:::::::::::----    
          .................................:::::::::::-.    
           .................................::::::::::.     
            ................................::::::::-.      
             ...............................::::::::.       
              ..............................::::::--..      
             .::...........................:::::-++==--:::..
                ..:::--:::::........::-----====--:::.... )";
                                for (int i = 0; i < bigSnowman.size(); i++) {
                                    std::cout << bigSnowman.at(i);
                                    if (i == 1827) {
                                        sleep_for(2s);
                                    }
                                    if (i > 1827 && i < 1852) {
                                        sleep_for(0.1s);
                                    }
                                    if (i == 1852) {
                                        sleep_for(0.5s);
                                    }
                                    if (i % 100 == 0) {
                                        if (i < 3000)
                                            sleep_for(0.3s);
                                        else
                                            sleep_for(0.1s);
                                    }

    }
                                /*
                                for (int i = 1828; i < 1852; i++) {
                                    std::cout << bigSnowman.at(i);
                                }
                                */
   
}
